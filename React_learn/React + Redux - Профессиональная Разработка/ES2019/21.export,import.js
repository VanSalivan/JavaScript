//! EXPORT / IMPORT

//? export

function summing(a, b) {
    return console.log(a + b);
}
function minus(a, b) {
    return console.log(a - b);
}
function umnoge(a, b) {
    return console.log(a * b);
}

//* 1) Экспорт конкретных объектов
export { summing, minus, umnoge };
//===========================================

//* Переименование файлов при экспорте
export { summing as sum, minus as min, umnoge as umn };
//===========================================

//* 2) Экспорт по умолчанию
export default function delenie(a, b) {
    return console.log(a / b);
}
//===========================================

//? import

//* 1) Импорт конкретных объектов
import { summing, minus, umnoge } from './путь _обьектов';
//===========================================

//* Переименование файлов при импорте
import { summing as sum, minus as min, umnoge as umn } from './путь_модуля';
//===========================================

//* 2) Импорт всех методов из модуля
import as * name_object from './путь_модуля'; //* все функции будут доступны через обьект "name_object.метод()"
//===========================================

//* 3) Импорт по умолчанию
import del from './путь_обьектов';
//* Если экспорт идет по умолчанию - пишем название переменной в которую мы сохраняем  значение экспорта по умолчанию
//===========================================

//* Мы можем комбинировать импорт значения по умолчанию и конкретных значений
import del, { summing, minus } from './путь_обьектов';
//===========================================

//* Можем сложить все значения в один обьект
import del, as * name_object from './путь_обьектов';

//* 4) Для импорта библеотеки не нужен относительный путь, достаточно имени файла
import name_object from 'имя_файла';
